     1                                  ;; bits3.asm
     2                                  extern	printb
     3                                  extern	printf
     4                                  section	.data
     5 00000000 4E6F20626974732061-     	msg1		db	"No bits are set:",10,0
     5 00000009 7265207365743A0A00 
     6 00000012 0A5365742062697420-     	msg2		db	10,"Set bit #4, that is the 5th bit:",10,0
     6 0000001B 23342C207468617420-
     6 00000024 697320746865203574-
     6 0000002D 68206269743A0A00   
     7 00000035 0A5365742062697420-     	msg3		db	10,"Set bit #7, that is the 8th bit:",10,0
     7 0000003E 23372C207468617420-
     7 00000047 697320746865203874-
     7 00000050 68206269743A0A00   
     8 00000058 0A5365742062697420-     	msg4		db	10,"Set bit #8, that is the 9th bit:",10,0
     8 00000061 23382C207468617420-
     8 0000006A 697320746865203974-
     8 00000073 68206269743A0A00   
     9 0000007B 0A5365742062697420-     	msg5		db	10,"Set bit #61, that is the 62nd bit:",10,0
     9 00000084 2336312C2074686174-
     9 0000008D 206973207468652036-
     9 00000096 326E64206269743A0A-
     9 0000009F 00                 
    10 000000A0 0A436C656172206269-     	msg6		db	10,"Clear bit #8, that is the 9th bit:",10,0
    10 000000A9 742023382C20746861-
    10 000000B2 742069732074686520-
    10 000000BB 397468206269743A0A-
    10 000000C4 00                 
    11 000000C5 0A5465737420626974-     	msg7		db	10,"Test bit #61, and display rdi",10,0
    11 000000CE 202336312C20616E64-
    11 000000D7 20646973706C617920-
    11 000000E0 7264690A00         
    12 000000E5 0000000000000000        	bitflags	dq	0
    13                                  section	.bss
    14                                  section	.text
    15                                  	global main
    16                                  main:
    17 00000000 55                      	push rbp
    18 00000001 4889E5                  	mov	rbp, rsp
    19                                  	; Print heading.
    20 00000004 48BF-                   	mov	rdi, msg1
    20 00000006 [0000000000000000] 
    21 0000000E 4831C0                  	xor	rax, rax
    22 00000011 E8(00000000)            	call	printf
    23                                  	; Print bitflags.
    24 00000016 488B3C25[E5000000]      	mov	rdi, [bitflags]
    25 0000001E E8(00000000)            	call	printb
    26                                  	; Set 4th(5) bit to 1.
    27                                  	; Print heading.
    28 00000023 48BF-                   	mov	rdi, msg2
    28 00000025 [1200000000000000] 
    29 0000002D 4831C0                  	xor	rax, rax
    30 00000030 E8(00000000)            	call	printf
    31                                  	; Setting...
    32 00000035 480FBA2C25-             	bts	qword [bitflags], 4	; Set 4th bit.
    32 0000003A [E5000000]04       
    33                                  	; Printing bitflags.
    34 0000003F 488B3C25[E5000000]      	mov	rdi, [bitflags]
    35 00000047 E8(00000000)            	call	printb
    36                                  	; Set 7th(8) bit to 1.
    37                                  	; Print heading
    38 0000004C 48BF-                   	mov	rdi, msg3
    38 0000004E [3500000000000000] 
    39 00000056 4831C0                  	xor	rax, rax
    40 00000059 E8(00000000)            	call	printf
    41                                  	; Setting...
    42 0000005E 480FBA2C25-             	bts	qword [bitflags], 7	; Set 7th bit.
    42 00000063 [E5000000]07       
    43                                  	; Print bitflags.
    44 00000068 488B3C25[E5000000]      	mov	rdi, [bitflags]
    45 00000070 E8(00000000)            	call	printb
    46                                  	; Set 8th(9) bit to 1.
    47                                  	; Print heading.
    48 00000075 48BF-                   	mov	rdi, msg4
    48 00000077 [5800000000000000] 
    49 0000007F 4831C0                  	xor	rax, rax
    50 00000082 E8(00000000)            	call	printf
    51                                  	; Setting...
    52 00000087 480FBA2C25-             	bts	qword [bitflags], 8
    52 0000008C [E5000000]08       
    53                                  	; Print bitflags.
    54 00000091 488B3C25[E5000000]      	mov	rdi, [bitflags]
    55 00000099 E8(00000000)            	call	printb
    56                                  	; Set 61st(62) bit to 1.
    57                                  	; Print heading.
    58 0000009E 48BF-                   	mov	rdi, msg5
    58 000000A0 [7B00000000000000] 
    59 000000A8 4831C0                  	xor	rax, rax
    60 000000AB E8(00000000)            	call	printf
    61                                  	; Setting...
    62 000000B0 480FBA2C25-             	bts	qword [bitflags], 61
    62 000000B5 [E5000000]3D       
    63                                  	; Print bitflags.
    64 000000BA 488B3C25[E5000000]      	mov	rdi, [bitflags]
    65 000000C2 E8(00000000)            	call	printb
    66                                  	; Clear 8th(9) bit.
    67                                  	; Print heading.
    68 000000C7 48BF-                   	mov	rdi, msg6
    68 000000C9 [A000000000000000] 
    69 000000D1 4831C0                  	xor	rax, rax
    70 000000D4 E8(00000000)            	call	printf
    71                                  	; Clearing...
    72 000000D9 480FBA3425-             	btr	qword [bitflags], 8
    72 000000DE [E5000000]08       
    73                                  	; Print bitflags.
    74 000000E3 488B3C25[E5000000]      	mov	rdi, [bitflags]
    75 000000EB E8(00000000)            	call	printb
    76                                  	; Test 61st(62) bit (CF will set to 1, if bit equal 1).
    77                                  	; Print heading.
    78 000000F0 48BF-                   	mov	rdi, msg7
    78 000000F2 [C500000000000000] 
    79 000000FA 4831C0                  	xor	rax, rax
    80 000000FD E8(00000000)            	call	printf
    81 00000102 B83D000000              	mov	rax, 61			; Need to test 61th bit.
    82 00000107 4831FF                  	xor	rdi, rdi		; Clear all bits.
    83 0000010A 480FA30425-             	bt	[bitflags], rax		; Test the bit.
    83 0000010F [E5000000]         
    84 00000113 400F92C7                	setc	dil			; Set dil (=junior rdi) to 1, if CF is 1.
    85 00000117 E8(00000000)            	call	printb
    86                                  	
    87 0000011C C9                      leave
    88 0000011D C3                      ret
