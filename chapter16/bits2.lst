     1                                  ;; bits2.asm
     2                                  extern	printf
     3                                  
     4                                  section	.data
     5 00000000 4E756D626572203120-     	msgn1	db	"Number 1 is = %d",0
     5 00000009 6973203D20256400   
     6 00000011 4E756D626572203220-     	msgn2	db	"Number 2 is = %d",0
     6 0000001A 6973203D20256400   
     7 00000022 53484C2032203D204F-     	msg1	db	"SHL 2 = OK multiply by 4",0
     7 0000002B 4B206D756C7469706C-
     7 00000034 79206279203400     
     8 0000003B 5348522032203D2057-     	msg2	db	"SHR 2 = WRONG divide by 4",0
     8 00000044 524F4E472064697669-
     8 0000004D 6465206279203400   
     9 00000055 53414C2032203D2063-     	msg3	db	"SAL 2 = correctly multiply by 4",0
     9 0000005E 6F72726563746C7920-
     9 00000067 6D756C7469706C7920-
     9 00000070 6279203400         
    10 00000075 5341522032203D2063-     	msg4	db	"SAR 2 = correctly divide by 4",0
    10 0000007E 6F72726563746C7920-
    10 00000087 646976696465206279-
    10 00000090 203400             
    11 00000093 5348522032203D204F-     	msg5	db	"SHR 2 = OK divide by 4",0
    11 0000009C 4B2064697669646520-
    11 000000A5 6279203400         
    12 000000AA 0800000000000000        	number1	dq	8
    13 000000B2 F8FFFFFFFFFFFFFF        	number2 dq	-8
    14 000000BA 0000000000000000        	result	dq	0
    15                                  
    16                                  section	.bss
    17                                  section	.text
    18                                  	global main
    19                                  main:
    20 00000000 55                      	push	rbp
    21 00000001 4889E5                  	mov	rbp, rsp
    22                                  
    23                                  ;SHL-----------------------------------
    24                                  ; Positive number
    25 00000004 48BE-                   	mov	rsi, msg1
    25 00000006 [2200000000000000] 
    26 0000000E E873010000              	call	printmsg	; Print heading.
    27                                  
    28 00000013 488B3425[AA000000]      	mov	rsi, [number1]
    29 0000001B E87B010000              	call	printnbr
    30                                  	
    31 00000020 488B0425[AA000000]      	mov	rax, [number1]
    32 00000028 48C1E002                	shl	rax, 2		; Multiply by 4.
    33 0000002C 4889C6                  	mov	rsi, rax
    34 0000002F E87C010000              	call	printres
    35                                  ; Negative number.
    36 00000034 48BE-                   	mov	rsi, msg1
    36 00000036 [2200000000000000] 
    37 0000003E E843010000              	call	printmsg	; Print heading.
    38                                  	
    39 00000043 488B3425[B2000000]      	mov	rsi, [number2]
    40 0000004B E84B010000              	call	printnbr
    41                                  	
    42 00000050 488B0425[B2000000]      	mov	rax, [number2]
    43 00000058 48C1E002                	shl	rax, 2		; Multiply by 4.
    44 0000005C 4889C6                  	mov	rsi, rax
    45 0000005F E84C010000              	call	printres
    46                                  ;SAL-----------------------------------
    47                                  ; Postive number.
    48 00000064 48BE-                   	mov	rsi, msg3
    48 00000066 [5500000000000000] 
    49 0000006E E813010000              	call	printmsg
    50                                  	
    51 00000073 488B3425[AA000000]      	mov	rsi, [number1]
    52 0000007B E81B010000              	call	printnbr
    53                                  
    54 00000080 488B0425[AA000000]      	mov	rax, [number1]
    55 00000088 48C1E002                	sal	rax, 2		; Multiply by 4.
    56 0000008C 4889C6                  	mov	rsi, rax
    57 0000008F E81C010000              	call	printres
    58                                  ; Negative number.
    59 00000094 48BE-                   	mov	rsi, msg3
    59 00000096 [5500000000000000] 
    60 0000009E E8E3000000              	call	printmsg
    61                                  
    62 000000A3 488B3425[B2000000]      	mov	rsi, [number2]
    63 000000AB E8EB000000              	call	printnbr
    64                                  
    65 000000B0 488B0425[B2000000]      	mov	rax, [number2]
    66 000000B8 48C1E002                	sal	rax, 2
    67 000000BC 4889C6                  	mov	rsi, rax
    68 000000BF E8EC000000              	call	printres
    69                                  ;SHR-----------------------------------
    70                                  ; Positive number.
    71 000000C4 48BE-                   	mov	rsi, msg5
    71 000000C6 [9300000000000000] 
    72 000000CE E8B3000000              	call	printmsg
    73                                  
    74 000000D3 488B3425[AA000000]      	mov	rsi, [number1]
    75 000000DB E8BB000000              	call	printnbr
    76                                  
    77 000000E0 488B0425[AA000000]      	mov	rax, [number1]
    78 000000E8 48C1E802                	shr	rax, 2
    79 000000EC 4889C6                  	mov	rsi, rax
    80 000000EF E8BC000000              	call	printres
    81                                  ; Negative number.
    82 000000F4 48BE-                   	mov	rsi, msg2
    82 000000F6 [3B00000000000000] 
    83 000000FE E883000000              	call	printmsg
    84                                  
    85 00000103 488B3425[B2000000]      	mov	rsi, [number2]
    86 0000010B E88B000000              	call	printnbr
    87                                  
    88 00000110 488B0425[B2000000]      	mov	rax, [number2]
    89 00000118 48C1E802                	shr	rax, 2
    90 0000011C 4889C6                  	mov	rsi, rax
    91 0000011F E88C000000              	call	printres
    92                                  ;SAR-----------------------------------
    93                                  ; Positive number.
    94 00000124 48BE-                   	mov	rsi, msg4
    94 00000126 [7500000000000000] 
    95 0000012E E853000000              	call	printmsg
    96                                  
    97 00000133 488B3425[AA000000]      	mov	rsi, [number1]
    98 0000013B E85B000000              	call	printnbr
    99                                  
   100 00000140 488B0425[AA000000]      	mov	rax, [number1]
   101 00000148 48C1F802                	sar	rax, 2
   102 0000014C 4889C6                  	mov	rsi, rax
   103 0000014F E85C000000              	call	printres
   104                                  ; Negative number.
   105 00000154 48BE-                   	mov	rsi, msg4
   105 00000156 [7500000000000000] 
   106 0000015E E823000000              	call	printmsg
   107                                  
   108 00000163 488B3425[B2000000]      	mov	rsi, [number2]
   109 0000016B E82B000000              	call	printnbr
   110                                  
   111 00000170 488B0425[B2000000]      	mov	rax, [number2]
   112 00000178 48C1F802                	sar	rax, 2
   113 0000017C 4889C6                  	mov	rsi, rax
   114 0000017F E82C000000              	call	printres
   115 00000184 C9                      leave
   116 00000185 C3                      ret
   117                                  ;--------------------------------------
   118                                  printmsg:
   119                                  	section	.data
   120 000000C2 0A25730A00              		.fmtstr	db	10,"%s",10,0	; Format for a string output.
   121                                  	section	.text
   122                                  	
   123 00000186 48BF-                   		mov	rdi, .fmtstr
   123 00000188 [C200000000000000] 
   124 00000190 B800000000              		mov	rax, 0
   125 00000195 E8(00000000)            		call	printf
   126 0000019A C3                      		ret
   127                                  ;--------------------------------------
   128                                  printnbr:
   129                                  	section	.data
   130 000000C7 546865206F7267696E-     		.fmtstr	db	"The orginal number is %lld",10,0
   130 000000D0 616C206E756D626572-
   130 000000D9 20697320256C6C640A-
   130 000000E2 00                 
   131                                  	section	.text
   132                                  		
   133 0000019B 48BF-                   		mov	rdi, .fmtstr
   133 0000019D [C700000000000000] 
   134 000001A5 B800000000              		mov	rax, 0
   135 000001AA E8(00000000)            		call	printf
   136 000001AF C3                      		ret
   137                                  ;--------------------------------------
   138                                  printres:
   139                                  	section	.data
   140 000000E3 54686520726573756C-     		.fmtstr	db	"The resulting number is %lld",10,0
   140 000000EC 74696E67206E756D62-
   140 000000F5 657220697320256C6C-
   140 000000FE 640A00             
   141                                  	section	.text
   142                                  		
   143 000001B0 48BF-                   		mov	rdi, .fmtstr
   143 000001B2 [E300000000000000] 
   144 000001BA B800000000              		mov	rax, 0
   145 000001BF E8(00000000)            		call	printf
   146 000001C4 C3                      		ret
