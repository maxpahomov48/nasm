     1                                  ;; jumploop.asm
     2                                  extern	printf
     3                                  section	.data
     4 00000000 00CA9A3B00000000        	number	dq	1000000000
     5 00000008 5468652073756D2066-     	fmt	db	"The sum from 0 to %ld is %ld",10,0
     5 00000011 726F6D203020746F20-
     5 0000001A 256C6420697320256C-
     5 00000023 640A00             
     6                                  section	.bss
     7                                  section	.text
     8                                  	global main
     9                                  main:
    10 00000000 55                      	push	rbp		; Prologue
    11 00000001 4889E5                  	mov	rbp, rsp	; funtcion.
    12 00000004 BB00000000              	mov	rbx, 0		; Counter.
    13 00000009 B800000000              	mov	rax, 0		; Sum will accumulate in rax.
    14                                  jloop:	
    15 0000000E 4801D8                  	add	rax, rbx	; rax = rax + rbx.
    16 00000011 48FFC3                  	inc 	rbx		; rbx = rbx + 1.
    17 00000014 483B1C25[00000000]      	cmp	rbx, [number]	; Compare rbx with Number = 5.
    18 0000001C 7EF0                    	jle	jloop		; Jump if less or equal, if rbx <= 5.
    19 0000001E 48BF-                   	mov	rdi, fmt	; Direction is fmt.
    19 00000020 [0800000000000000] 
    20 00000028 488B3425[00000000]      	mov	rsi, [number]	; Source is number.
    21 00000030 4889C2                  	mov	rdx, rax	; rdx = rax.
    22 00000033 B800000000              	mov	rax, 0		; rax = 0.
    23 00000038 E8(00000000)            	call	printf
    24 0000003D 4889EC                  	mov	rsp, rbp
    25 00000040 5D                      	pop	rbp
    26 00000041 C3                      	ret
